import { Injectable } from '@angular/core';
import * as i0 from "@angular/core";
export class MtxGridUtils {
    constructor() { }
    /**
     * Get cell value from column key e.g. `a.b.c`
     * @param rowData Row data
     * @param colDef Column definition
     */
    getCellValue(rowData, colDef) {
        const keyArr = colDef.field ? colDef.field.split('.') : [];
        let tmp = '';
        keyArr.forEach((key, i) => {
            if (i === 0) {
                tmp = rowData[key];
            }
            else {
                tmp = tmp && tmp[key];
            }
        });
        return tmp;
    }
    /**
     * Get all data of a col
     * @param data All data
     * @param colDef Column definition
     */
    getColData(data, colDef) {
        return data.map((rowData) => this.getCellValue(rowData, colDef));
    }
    /**
     * Remove white spaces in a string and convert string to array
     * @param str string
     */
    str2arr(str) {
        return str.replace(/[\r\n\s]/g, '').split(',');
    }
}
/** @nocollapse */ MtxGridUtils.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: MtxGridUtils, deps: [], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ MtxGridUtils.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: MtxGridUtils });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: MtxGridUtils, decorators: [{
            type: Injectable
        }], ctorParameters: function () { return []; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ3JpZC11dGlscy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL2V4dGVuc2lvbnMvZ3JpZC9ncmlkLXV0aWxzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7O0FBSTNDLE1BQU0sT0FBTyxZQUFZO0lBQ3ZCLGdCQUFlLENBQUM7SUFFaEI7Ozs7T0FJRztJQUNILFlBQVksQ0FBQyxPQUFZLEVBQUUsTUFBcUI7UUFDOUMsTUFBTSxNQUFNLEdBQUcsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQztRQUUzRCxJQUFJLEdBQUcsR0FBUSxFQUFFLENBQUM7UUFFbEIsTUFBTSxDQUFDLE9BQU8sQ0FBQyxDQUFDLEdBQVcsRUFBRSxDQUFTLEVBQUUsRUFBRTtZQUN4QyxJQUFJLENBQUMsS0FBSyxDQUFDLEVBQUU7Z0JBQ1gsR0FBRyxHQUFHLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUNwQjtpQkFBTTtnQkFDTCxHQUFHLEdBQUcsR0FBRyxJQUFJLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQzthQUN2QjtRQUNILENBQUMsQ0FBQyxDQUFDO1FBQ0gsT0FBTyxHQUFHLENBQUM7SUFDYixDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILFVBQVUsQ0FBQyxJQUFXLEVBQUUsTUFBcUI7UUFDM0MsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBWSxFQUFFLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxDQUFDLE9BQU8sRUFBRSxNQUFNLENBQUMsQ0FBQyxDQUFDO0lBQ3hFLENBQUM7SUFFRDs7O09BR0c7SUFDSCxPQUFPLENBQUMsR0FBVztRQUNqQixPQUFPLEdBQUcsQ0FBQyxPQUFPLENBQUMsV0FBVyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQztJQUNqRCxDQUFDOzs0SEF0Q1UsWUFBWTtnSUFBWixZQUFZOzJGQUFaLFlBQVk7a0JBRHhCLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBNdHhHcmlkQ29sdW1uIH0gZnJvbSAnLi9pbnRlcmZhY2VzJztcblxuQEluamVjdGFibGUoKVxuZXhwb3J0IGNsYXNzIE10eEdyaWRVdGlscyB7XG4gIGNvbnN0cnVjdG9yKCkge31cblxuICAvKipcbiAgICogR2V0IGNlbGwgdmFsdWUgZnJvbSBjb2x1bW4ga2V5IGUuZy4gYGEuYi5jYFxuICAgKiBAcGFyYW0gcm93RGF0YSBSb3cgZGF0YVxuICAgKiBAcGFyYW0gY29sRGVmIENvbHVtbiBkZWZpbml0aW9uXG4gICAqL1xuICBnZXRDZWxsVmFsdWUocm93RGF0YTogYW55LCBjb2xEZWY6IE10eEdyaWRDb2x1bW4pOiBzdHJpbmcge1xuICAgIGNvbnN0IGtleUFyciA9IGNvbERlZi5maWVsZCA/IGNvbERlZi5maWVsZC5zcGxpdCgnLicpIDogW107XG5cbiAgICBsZXQgdG1wOiBhbnkgPSAnJztcblxuICAgIGtleUFyci5mb3JFYWNoKChrZXk6IHN0cmluZywgaTogbnVtYmVyKSA9PiB7XG4gICAgICBpZiAoaSA9PT0gMCkge1xuICAgICAgICB0bXAgPSByb3dEYXRhW2tleV07XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0bXAgPSB0bXAgJiYgdG1wW2tleV07XG4gICAgICB9XG4gICAgfSk7XG4gICAgcmV0dXJuIHRtcDtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgYWxsIGRhdGEgb2YgYSBjb2xcbiAgICogQHBhcmFtIGRhdGEgQWxsIGRhdGFcbiAgICogQHBhcmFtIGNvbERlZiBDb2x1bW4gZGVmaW5pdGlvblxuICAgKi9cbiAgZ2V0Q29sRGF0YShkYXRhOiBhbnlbXSwgY29sRGVmOiBNdHhHcmlkQ29sdW1uKTogYW55W10ge1xuICAgIHJldHVybiBkYXRhLm1hcCgocm93RGF0YTogYW55KSA9PiB0aGlzLmdldENlbGxWYWx1ZShyb3dEYXRhLCBjb2xEZWYpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZW1vdmUgd2hpdGUgc3BhY2VzIGluIGEgc3RyaW5nIGFuZCBjb252ZXJ0IHN0cmluZyB0byBhcnJheVxuICAgKiBAcGFyYW0gc3RyIHN0cmluZ1xuICAgKi9cbiAgc3RyMmFycihzdHI6IHN0cmluZyk6IHN0cmluZ1tdIHtcbiAgICByZXR1cm4gc3RyLnJlcGxhY2UoL1tcXHJcXG5cXHNdL2csICcnKS5zcGxpdCgnLCcpO1xuICB9XG59XG4iXX0=